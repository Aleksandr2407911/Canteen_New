from aiogram import Router
from aiogram.filters import Command, CommandStart
from aiogram.types import (InlineKeyboardButton, InlineKeyboardMarkup, Message,
                            KeyboardButton, ReplyKeyboardMarkup)
import xlsx_parse
from aiogram import F

#–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router = Router()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
button_1 = KeyboardButton(text='–ú–µ–Ω—é üç≤')
button_2 = KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞ üß∫')
button_3 = KeyboardButton(text='–ú–æ–∏ –∑–∞–∫–∞–∑—ã üïê')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
Keyboard = ReplyKeyboardMarkup(keyboard=[[button_1], [button_2], [button_3]], resize_keyboard= True)


#–°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫ - –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–Ω—é –Ω—É–∂–Ω–æ –≤–∑—è—Ç—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
list_buttons = []
for i in xlsx_parse.take_categories(xlsx_parse.find_daily_menu).items():
    button = [InlineKeyboardButton(text=i[0], callback_data=i[0])] # –ù–ï–û–ë–•–û–î–ò–ú–û –ü–û–ú–ï–ù–Ø–¢–¨ CALBACK_DATA, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    list_buttons.append(button)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–µ–Ω—é
keyboard_categories = InlineKeyboardMarkup(inline_keyboard=list_buttons)


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫ —Ç–æ–≤–∞—Ä–∞
#handlers_prosucts = []
for key, value in xlsx_parse.take_categories(xlsx_parse.find_daily_menu).items():
    list_buttons = []
    for v in value:
        button = [InlineKeyboardButton(text=v, callback_data=v)]
        list_buttons.append(button)
    keyboard_food = InlineKeyboardMarkup(inline_keyboard=list_buttons)
    #—ç—Ç–∏ —Ö—ç–Ω–¥–ª–µ—Ä—ã –±—É–¥—É—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    @router.message(F.data == key)
    async def process_categories_comands(message: Message):
        await message.answer(text='key', reply_markup=keyboard_food)

    #handlers_prosucts.append(process_categories_comands)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '/start'
# –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text='Hi', reply_markup=Keyboard)

#—ç—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –ú–µ–Ω—é üç≤
@router.message(F.text == '–ú–µ–Ω—é üç≤')
async def process_menu_command(message: Message):
    await message.answer(text='–ú–µ–Ω—é üç≤', reply_markup=keyboard_categories)

'''# —ç—Ç–æ—Ç —Ä–æ—É—Ç–µ—Ä –±—É–¥–µ—Ç –æ—Ç–ª–∞–≤–ª–∏–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏–π 
@router.message(F.data in xlsx_parse.take_categories(xlsx_parse.find_daily_menu).keys())
async def process_categories_command(message: Message):
    await message.answer(text='–ú–µ–Ω—é üç≤', reply_markup=keyboard_categories)'''

